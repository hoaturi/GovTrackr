using Projects;

var builder = DistributedApplication.CreateBuilder(args);

// Password is auto-generated by default.
// For custom password: dotnet user-secrets set Parameters:Postgres-password <password>
// See docs: https://learn.microsoft.com/en-us/dotnet/aspire/database/postgresql-integration
var postgres = builder.AddPostgres("Postgres", port: 5432)
    .WithDataVolume();

// This just registers the DB name - doesn't actually create it.
// You'll need to create it manually or through migrations.
var database = postgres.AddDatabase("GovTrackrDb");

builder.AddProject<GovTrackr_Api>("GovTrackrApi")
    .WithReference(database)
    .WaitFor(database);

// This service handles running EF migrations on startup
builder.AddProject<GovTrackr_MigrationService>("GovTrackrMigration")
    .WithReference(database)
    .WaitFor(database);

builder.AddProject<GovTrackr_DocumentScraping_Worker>("GovTrackrDocumentScrapingWorker")
    .WithReference(database)
    .WaitFor(database);

builder.AddProject<GovTrackr_DocumentTranslation_Worker>("GovTrackrDocumentTranslationWorker")
    .WithReference(database)
    .WaitFor(database);

builder.Build().Run();